import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { signIn, signOut, useSession } from "next-auth/react";

import { api } from "~/utils/api";
import Image from "next/image";

const Home: NextPage = () => {
  // const hello = api.example.hello.useQuery({ text: "from tRPC" });

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="h-screen bg-black">
        <header>
          <nav className="container mx-auto py-5">
            <div className="flex w-full items-center justify-between font-strech   ">
              <Link
                href="/"
                className="text-md text-link font-bold text-white"
                data-content="LIBRARY OF ALEXANDRIA"
              >
                LIBRARY OF ALEXANDRIA
              </Link>
              <div className="flex gap-4 text-sm font-light">
                <Link href="/about" className=" text-white">
                  About
                </Link>
                <Link href="/login" className="text-white">
                  Login
                </Link>

                <Link href="/signup" className="text-white">
                  Sign Up
                </Link>

                <Link href="/dashboard" className="text-white">
                  Dashboard
                </Link>

                <Link href="/profile" className="text-white">
                  Profile
                </Link>
              </div>
            </div>
          </nav>
        </header>

        <section className="container mx-auto mt-20 h-3/4">
          <div className=" flex flex-col items-center justify-center">
            {/* <Image
              src="/images/header-video.mp4"
              alt="index image"
              height={1000}
              width={1000}
              className="-mb-8 w-[400px] grayscale"
            /> */}

            <video autoPlay loop muted className="-mb-24 w-[400px] grayscale">
              <source src="/images/header-video.mp4" type="video/mp4" />
            </video>

            {/* <div style="width:100%;height:0;padding-bottom:100%;position:relative;"><iframe src="https://giphy.com/embed/l3vR7HhoK4s7tJ7CE" width="100%" height="100%" style="position:absolute" frameBorder="0" class="giphy-embed" allowFullScreen></iframe></div><p><a href="https://giphy.com/gifs/animation-loop-illustration-l3vR7HhoK4s7tJ7CE">via GIPHY</a></p> */}
            <h1 className="z-10 text-center font-strech uppercase md:text-8xl 2xl:text-9xl ">
              library of alexandria
            </h1>
          </div>
        </section>

        <section className="container mx-auto  mt-64 h-screen">
          <div className="relative  flex justify-between">
            <div className=" absolute right-1/4 top-1/2 z-50 flex h-[700px] w-3/5 flex-col items-start justify-center gap-4">
              <h2 className=" font-strech text-7xl uppercase text-gray-300 ">
                explore the world of knowledge
              </h2>
              <p className=" w-4/5 text-2xl text-white">
                read books, articles, and more from the world&#39;s largest
                library of knowledge and wisdom from the ancient world to the
                modern day. find out more about the library of alexandria and
                how you can contribute to the world&#39;s largest library.
              </p>
              <button className="btn-link">
                <span className="link-inner">find out more</span>
              </button>
            </div>

            <Image
              src="/images/header2.webp"
              alt=""
              height={1000}
              width={1000}
              className="absolute left-1/4 top-0 w-3/5 rotate-180 skew-y-12 opacity-80 grayscale"
            />
          </div>
        </section>
      </main>
    </>
  );
};

export default Home;

// const AuthShowcase: React.FC = () => {
//   const { data: sessionData } = useSession();

//   const { data: secretMessage } = api.example.getSecretMessage.useQuery(
//     undefined, // no input
//     { enabled: sessionData?.user !== undefined }
//   );

//   return (
//     <div className="flex flex-col items-center justify-center gap-4">
//       <p className="text-center text-2xl text-white">
//         {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
//         {secretMessage && <span> - {secretMessage}</span>}
//       </p>
//       <button
//         className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
//         onClick={sessionData ? () => void signOut() : () => void signIn()}
//       >
//         {sessionData ? "Sign out" : "Sign in"}
//       </button>
//     </div>
//   );
// };
